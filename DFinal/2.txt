
import pandas as pd
import numpy as np

data = {
    'Student_ID': [1, 2, 3, 4, 5, 6, 7],
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva', 'Frank', 'Grace'],
    'Math_Score': [85, 90, np.nan, 40, 95, 20, 88],
    'Science_Score': [78, 85, 82, np.nan, 99, 55, 89],
    'Attendance': [0.9, 0.85, 0.7, 0.6, 1.0, 0.2, 0.95]
}
df = pd.DataFrame(data)

print("Missing Values:")
print(df.isnull().sum())

df['Math_Score'] = df['Math_Score'].fillna(df['Math_Score'].mean())
df['Science_Score'] = df['Science_Score'].fillna(df['Science_Score'].mean())
print(df.isnull().sum())


def detect_outliers(col):
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    outliers = df[(df[col] < lower_bound) | (df[col] > upper_bound)]
    return outliers

print("\nOutliers in Math Score:")
print(detect_outliers('Math_Score'))

print("\nOutliers in Science Score:")
print(detect_outliers('Science_Score'))

print("\nOutliers in Attendance:")
print(detect_outliers('Attendance'))

df['Attendance'] = np.where(df['Attendance'] < 0.3, 0.3, df['Attendance'])
df['Math_Score'] = np.where(df['Math_Score'] < 40, 40, df['Math_Score'])

#part3 transformation normally skewed
df['Attendance_Log'] = np.log(df['Attendance'])

print("\nFinal Dataset:")
print(df)










 
